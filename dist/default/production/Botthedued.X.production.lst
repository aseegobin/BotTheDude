

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Dec 07 22:27:56 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000D                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0013                     	;# 
    30  0014                     	;# 
    31  0015                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0017                     	;# 
    35  0018                     	;# 
    36  0019                     	;# 
    37  001A                     	;# 
    38  001C                     	;# 
    39  001D                     	;# 
    40  001E                     	;# 
    41  001F                     	;# 
    42  0081                     	;# 
    43  0085                     	;# 
    44  0086                     	;# 
    45  0087                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  008E                     	;# 
    49  008F                     	;# 
    50  0090                     	;# 
    51  0092                     	;# 
    52  0093                     	;# 
    53  0093                     	;# 
    54  0093                     	;# 
    55  0094                     	;# 
    56  0095                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0118                     	;# 
    75  0119                     	;# 
    76  011A                     	;# 
    77  011B                     	;# 
    78  011E                     	;# 
    79  011F                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  019D                     	;# 
    83  019E                     	;# 
    84  001F                     _ADCON0bits	set	31
    85  001E                     _ADRESH	set	30
    86  0007                     _PORTCbits	set	7
    87  009F                     _ADCON1bits	set	159
    88  009E                     _ADRESL	set	158
    89  0085                     _TRISA	set	133
    90  0085                     _TRISAbits	set	133
    91  0086                     _TRISB	set	134
    92  0086                     _TRISBbits	set	134
    93  0087                     _TRISC	set	135
    94  0087                     _TRISCbits	set	135
    95  011E                     _ANSEL	set	286
    96  011F                     _ANSELH	set	287
    97  011E                     _ANSELbits	set	286
    98                           
    99                           	psect	text0
   100  0000                     __ptext0:	
   101                           ; #config settings
   102                           
   103                           
   104                           ;psect for function _m0for
   105  0000                     
   106                           	psect	cinit
   107  07FD                     start_initialization:	
   108  07FD                     __initialization:	
   109  07FD                     end_of_initialization:	
   110                           ;End of C runtime variable initialization code
   111                           
   112  07FD                     __end_of__initialization:	
   113  07FD  0183               	clrf	3
   114  07FE  118A  2F9D         	ljmp	_main	;jump to C main() function
   115                           
   116                           	psect	cstackCOMMON
   117  0070                     __pcstackCOMMON:	
   118  0070                     ??_m0for:	
   119  0070                     ??_m0rev:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0070                     ?_m0for:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  0070                     ?_m0rev:	
   126                           ; 2 bytes @ 0x0
   127                           
   128  0070                     ?_main:	
   129                           ; 2 bytes @ 0x0
   130                           
   131                           
   132                           ; 2 bytes @ 0x0
   133  0070                     	ds	2
   134  0072                     ??_main:	
   135  0072                     main@result:	
   136                           ; 0 bytes @ 0x2
   137                           
   138                           
   139                           ; 2 bytes @ 0x2
   140  0072                     	ds	2
   141                           
   142                           	psect	maintext
   143  079D                     __pmaintext:	
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 5 in file "main.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;  result          2    2[COMMON] int 
   154 ;; Return value:  Size  Location     Type
   155 ;;                  2   36[COMMON] int 
   156 ;; Registers used:
   157 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 17F/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   163 ;;      Params:         0       0       0       0
   164 ;;      Locals:         2       0       0       0
   165 ;;      Temps:          0       0       0       0
   166 ;;      Totals:         2       0       0       0
   167 ;;Total ram usage:        2 bytes
   168 ;; Hardware stack levels required when called:    1
   169 ;; This function calls:
   170 ;;		_m0for
   171 ;;		_m0rev
   172 ;; This function is called by:
   173 ;;		Startup code after reset
   174 ;; This function uses a non-reentrant model
   175 ;;
   176                           
   177                           
   178                           ;psect for function _main
   179  079D                     _main:	
   180                           
   181                           ;main.c: 7: int result;
   182                           ;main.c: 9: TRISA = 0xFF;
   183                           
   184                           ;incstack = 0
   185                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   186  079D  30FF               	movlw	255
   187  079E  1683               	bsf	3,5	;RP0=1, select bank1
   188  079F  1303               	bcf	3,6	;RP1=0, select bank1
   189  07A0  0085               	movwf	5	;volatile
   190                           
   191                           ;main.c: 10: TRISB = 0xFF;
   192  07A1  30FF               	movlw	255
   193  07A2  0086               	movwf	6	;volatile
   194                           
   195                           ;main.c: 11: TRISC = 0xFF;
   196  07A3  30FF               	movlw	255
   197  07A4  0087               	movwf	7	;volatile
   198                           
   199                           ;main.c: 13: ANSEL = 0x00;
   200  07A5  1283               	bcf	3,5	;RP0=0, select bank2
   201  07A6  1703               	bsf	3,6	;RP1=1, select bank2
   202  07A7  019E               	clrf	30	;volatile
   203                           
   204                           ;main.c: 14: ANSELH = 0x00;
   205  07A8  019F               	clrf	31	;volatile
   206                           
   207                           ;main.c: 16: TRISAbits.TRISA2 = 1;
   208  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   209  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   210  07AB  1505               	bsf	5,2	;volatile
   211                           
   212                           ;main.c: 17: ANSELbits.ANS2 = 1;
   213  07AC  1283               	bcf	3,5	;RP0=0, select bank2
   214  07AD  1703               	bsf	3,6	;RP1=1, select bank2
   215  07AE  151E               	bsf	30,2	;volatile
   216                           
   217                           ;main.c: 19: TRISAbits.TRISA5 = 1;
   218  07AF  1683               	bsf	3,5	;RP0=1, select bank1
   219  07B0  1303               	bcf	3,6	;RP1=0, select bank1
   220  07B1  1685               	bsf	5,5	;volatile
   221                           
   222                           ;main.c: 20: ANSELbits.ANS5 = 1;
   223  07B2  1283               	bcf	3,5	;RP0=0, select bank2
   224  07B3  1703               	bsf	3,6	;RP1=1, select bank2
   225  07B4  169E               	bsf	30,5	;volatile
   226                           
   227                           ;main.c: 22: TRISCbits.TRISC0 = 0;
   228  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   229  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   230  07B7  1007               	bcf	7,0	;volatile
   231                           
   232                           ;main.c: 23: TRISCbits.TRISC1 = 0;
   233  07B8  1087               	bcf	7,1	;volatile
   234                           
   235                           ;main.c: 24: TRISBbits.TRISB7 = 0;
   236  07B9  1386               	bcf	6,7	;volatile
   237                           
   238                           ;main.c: 30: ADCON0bits.ADFM = 1;
   239  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   240  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   241  07BC  179F               	bsf	31,7	;volatile
   242                           
   243                           ;main.c: 31: ADCON0bits.VCFG = 0;
   244  07BD  131F               	bcf	31,6	;volatile
   245                           
   246                           ;main.c: 32: ADCON1bits.ADCS = 0b001;
   247  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   248  07BF  1303               	bcf	3,6	;RP1=0, select bank1
   249  07C0  081F               	movf	31,w	;volatile
   250  07C1  398F               	andlw	-113
   251  07C2  3810               	iorlw	16
   252  07C3  009F               	movwf	31	;volatile
   253                           
   254                           ;main.c: 37: ADCON0bits.CHS = 2;
   255  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   256  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   257  07C6  081F               	movf	31,w	;volatile
   258  07C7  39C3               	andlw	-61
   259  07C8  3808               	iorlw	8
   260  07C9  009F               	movwf	31	;volatile
   261                           
   262                           ;main.c: 38: ADCON0bits.ADON = 1;
   263  07CA  141F               	bsf	31,0	;volatile
   264  07CB                     l552:	
   265                           ;main.c: 44: while(1)
   266                           
   267                           
   268                           ;main.c: 45: {
   269                           ;main.c: 46: _delay((unsigned long)((5)*(4000000/4000000.0)));
   270  07CB  2FCC               	nop2	;2 cycle nop
   271  07CC  2FCD               	nop2	;2 cycle nop
   272  07CD  0000               	nop
   273                           
   274                           ;main.c: 47: ADCON0bits.GO = 1;
   275  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   276  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   277  07D0  149F               	bsf	31,1	;volatile
   278  07D1                     l38:	
   279                           ;main.c: 48: while(ADCON0bits.GO==1){};
   280                           
   281  07D1  189F               	btfsc	31,1	;volatile
   282  07D2  2FD1               	goto	l38
   283                           
   284                           ;main.c: 49: result = (ADRESH<<8)+ADRESL;
   285  07D3  081E               	movf	30,w	;volatile
   286  07D4  01F3               	clrf	main@result+1
   287  07D5  07F3               	addwf	main@result+1,f
   288  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   289  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   290  07D8  081E               	movf	30,w	;volatile
   291  07D9  01F2               	clrf	main@result
   292  07DA  07F2               	addwf	main@result,f
   293                           
   294                           ;main.c: 51: if(result > 170)
   295  07DB  0873               	movf	main@result+1,w
   296  07DC  3A80               	xorlw	128
   297  07DD  00FF               	movwf	127
   298  07DE  3080               	movlw	128
   299  07DF  027F               	subwf	127,w
   300  07E0  1D03               	skipz
   301  07E1  2FE4               	goto	u25
   302  07E2  30AB               	movlw	171
   303  07E3  0272               	subwf	main@result,w
   304  07E4                     u25:	
   305  07E4  1C03               	skipc
   306  07E5  2FEA               	goto	l562
   307                           
   308                           ;main.c: 52: {
   309                           ;main.c: 53: m0for();
   310  07E6  118A  276D  118A   	fcall	_m0for
   311                           
   312                           ;main.c: 54: }
   313  07E9  2FCB               	goto	l552
   314  07EA                     l562:	
   315                           
   316                           ;main.c: 55: else if (result < 110)
   317  07EA  0873               	movf	main@result+1,w
   318  07EB  3A80               	xorlw	128
   319  07EC  00FF               	movwf	127
   320  07ED  3080               	movlw	128
   321  07EE  027F               	subwf	127,w
   322  07EF  1D03               	skipz
   323  07F0  2FF3               	goto	u35
   324  07F1  306E               	movlw	110
   325  07F2  0272               	subwf	main@result,w
   326  07F3                     u35:	
   327  07F3  1803               	skipnc
   328  07F4  2FF9               	goto	l43
   329                           
   330                           ;main.c: 56: {
   331                           ;main.c: 57: m0rev();
   332  07F5  118A  2784  118A   	fcall	_m0rev
   333                           
   334                           ;main.c: 58: }
   335  07F8  2FCB               	goto	l552
   336  07F9                     l43:	
   337                           
   338                           ;main.c: 59: else
   339                           ;main.c: 60: {
   340                           ;main.c: 61: PORTCbits.RC0 = 0;
   341  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   342  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   343  07FB  1007               	bcf	7,0	;volatile
   344  07FC  2FCB               	goto	l552
   345  07FD                     __end_of_main:	
   346                           ;main.c: 62: }
   347                           ;main.c: 63: }
   348                           ;main.c: 64: return 0;
   349                           ;	Return value of _main is never used
   350                           
   351                           
   352                           	psect	text1
   353  0784                     __ptext1:	
   354 ;; *************** function _m0rev *****************
   355 ;; Defined at:
   356 ;;		line 75 in file "main.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;                  2   32[COMMON] int 
   363 ;; Registers used:
   364 ;;		wreg
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   370 ;;      Params:         0       0       0       0
   371 ;;      Locals:         0       0       0       0
   372 ;;      Temps:          2       0       0       0
   373 ;;      Totals:         2       0       0       0
   374 ;;Total ram usage:        2 bytes
   375 ;; Hardware stack levels used:    1
   376 ;; This function calls:
   377 ;;		Nothing
   378 ;; This function is called by:
   379 ;;		_main
   380 ;; This function uses a non-reentrant model
   381 ;;
   382                           
   383                           
   384                           ;psect for function _m0rev
   385  0784                     _m0rev:	
   386                           
   387                           ;main.c: 77: PORTCbits.RC0 = 1;
   388                           
   389                           ;incstack = 0
   390                           ; Regs used in _m0rev: [wreg]
   391  0784  1283               	bcf	3,5	;RP0=0, select bank0
   392  0785  1303               	bcf	3,6	;RP1=0, select bank0
   393  0786  1407               	bsf	7,0	;volatile
   394                           
   395                           ;main.c: 78: _delay((unsigned long)((10)*(4000000/4000.0)));
   396  0787  300D               	movlw	13
   397  0788  00F1               	movwf	??_m0rev+1
   398  0789  30FB               	movlw	251
   399  078A  00F0               	movwf	??_m0rev
   400  078B                     u47:	
   401  078B  0BF0               	decfsz	??_m0rev,f
   402  078C  2F8B               	goto	u47
   403  078D  0BF1               	decfsz	??_m0rev+1,f
   404  078E  2F8B               	goto	u47
   405  078F  2F90               	nop2
   406                           
   407                           ;main.c: 79: PORTCbits.RC0 = 0;
   408  0790  1283               	bcf	3,5	;RP0=0, select bank0
   409  0791  1303               	bcf	3,6	;RP1=0, select bank0
   410  0792  1007               	bcf	7,0	;volatile
   411                           
   412                           ;main.c: 80: _delay((unsigned long)((10)*(4000000/4000.0)));
   413  0793  300D               	movlw	13
   414  0794  00F1               	movwf	??_m0rev+1
   415  0795  30FB               	movlw	251
   416  0796  00F0               	movwf	??_m0rev
   417  0797                     u57:	
   418  0797  0BF0               	decfsz	??_m0rev,f
   419  0798  2F97               	goto	u57
   420  0799  0BF1               	decfsz	??_m0rev+1,f
   421  079A  2F97               	goto	u57
   422  079B  2F9C               	nop2
   423  079C  0008               	return
   424  079D                     __end_of_m0rev:	
   425                           
   426                           	psect	text2
   427  076D                     __ptext2:	
   428 ;; *************** function _m0for *****************
   429 ;; Defined at:
   430 ;;		line 67 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  2   30[COMMON] int 
   437 ;; Registers used:
   438 ;;		wreg
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   444 ;;      Params:         0       0       0       0
   445 ;;      Locals:         0       0       0       0
   446 ;;      Temps:          2       0       0       0
   447 ;;      Totals:         2       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_main
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           
   458                           ;psect for function _m0for
   459  076D                     _m0for:	
   460                           
   461                           ;main.c: 69: PORTCbits.RC0 = 1;
   462                           
   463                           ;incstack = 0
   464                           ; Regs used in _m0for: [wreg]
   465  076D  1283               	bcf	3,5	;RP0=0, select bank0
   466  076E  1303               	bcf	3,6	;RP1=0, select bank0
   467  076F  1407               	bsf	7,0	;volatile
   468                           
   469                           ;main.c: 70: _delay((unsigned long)((1)*(4000000/4000.0)));
   470  0770  30F9               	movlw	249
   471  0771  00F0               	movwf	??_m0for
   472  0772                     u67:	
   473  0772  0000               	nop
   474  0773  0BF0               	decfsz	??_m0for,f
   475  0774  2F72               	goto	u67
   476  0775  2F76               	nop2	;nop
   477  0776  0000               	nop
   478                           
   479                           ;main.c: 71: PORTCbits.RC0 = 0;
   480  0777  1283               	bcf	3,5	;RP0=0, select bank0
   481  0778  1303               	bcf	3,6	;RP1=0, select bank0
   482  0779  1007               	bcf	7,0	;volatile
   483                           
   484                           ;main.c: 72: _delay((unsigned long)((19)*(4000000/4000.0)));
   485  077A  3019               	movlw	25
   486  077B  00F1               	movwf	??_m0for+1
   487  077C  30AB               	movlw	171
   488  077D  00F0               	movwf	??_m0for
   489  077E                     u77:	
   490  077E  0BF0               	decfsz	??_m0for,f
   491  077F  2F7E               	goto	u77
   492  0780  0BF1               	decfsz	??_m0for+1,f
   493  0781  2F7E               	goto	u77
   494  0782  2F83               	nop2
   495  0783  0008               	return
   496  0784                     __end_of_m0for:	
   497  007E                     btemp	set	126	;btemp
   498  007E                     wtemp	set	126
   499  007E                     wtemp0	set	126
   500  0080                     wtemp1	set	128
   501  0082                     wtemp2	set	130
   502  0084                     wtemp3	set	132
   503  0086                     wtemp4	set	134
   504  0088                     wtemp5	set	136
   505  007F                     wtemp6	set	127
   506  007E                     ttemp	set	126
   507  007E                     ttemp0	set	126
   508  0081                     ttemp1	set	129
   509  0084                     ttemp2	set	132
   510  0087                     ttemp3	set	135
   511  007F                     ttemp4	set	127
   512  007E                     ltemp	set	126
   513  007E                     ltemp0	set	126
   514  0082                     ltemp1	set	130
   515  0086                     ltemp2	set	134
   516  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_m0for
    _main->_m0rev

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              2 COMMON     2     2      0
                              _m0for
                              _m0rev
 ---------------------------------------------------------------------------------
 (1) _m0rev                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _m0for                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _m0for
   _m0rev

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Dec 07 22:27:56 2014

            __CFG_CP$OFF 0000                       l43 07F9                       l38 07D1  
                     u25 07E4                       u35 07F3                       u47 078B  
                     u57 0797                       u67 0772                       u77 077E  
                    l552 07CB                      l562 07EA             __CFG_CPD$OFF 0000  
                   _main 079D                     btemp 007E                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _ANSEL 011E                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087           __CFG_FCMEN$OFF 0000  
                  _m0for 076D                    _m0rev 0784           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0072                   ?_m0for 0070  
                 ?_m0rev 0070                   _ADRESH 001E                   _ADRESL 009E  
                 _ANSELH 011F           __CFG_PWRTE$OFF 0000  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_m0for 0784            __end_of_m0rev 079D  
                ??_m0for 0070                  ??_m0rev 0070               __pmaintext 079D  
              _ANSELbits 011E                  __ptext0 0000                  __ptext1 0784  
                __ptext2 076D     end_of_initialization 07FD                _PORTCbits 0007  
              _TRISAbits 0085                _TRISBbits 0086                _TRISCbits 0087  
             main@result 0072      start_initialization 07FD                ___latbits 0001  
         __size_of_m0for 0017           __size_of_m0rev 0019               _ADCON0bits 001F  
             _ADCON1bits 009F            __size_of_main 0060        __CFG_FOSC$INTRCIO 0000  
