

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Dec 08 18:00:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000D                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0013                     	;# 
    30  0014                     	;# 
    31  0015                     	;# 
    32  0015                     	;# 
    33  0016                     	;# 
    34  0017                     	;# 
    35  0018                     	;# 
    36  0019                     	;# 
    37  001A                     	;# 
    38  001C                     	;# 
    39  001D                     	;# 
    40  001E                     	;# 
    41  001F                     	;# 
    42  0081                     	;# 
    43  0085                     	;# 
    44  0086                     	;# 
    45  0087                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  008E                     	;# 
    49  008F                     	;# 
    50  0090                     	;# 
    51  0092                     	;# 
    52  0093                     	;# 
    53  0093                     	;# 
    54  0093                     	;# 
    55  0094                     	;# 
    56  0095                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0096                     	;# 
    60  0097                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0118                     	;# 
    75  0119                     	;# 
    76  011A                     	;# 
    77  011B                     	;# 
    78  011E                     	;# 
    79  011F                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82  019D                     	;# 
    83  019E                     	;# 
    84  001F                     _ADCON0bits	set	31
    85  001E                     _ADRESH	set	30
    86  0007                     _PORTCbits	set	7
    87  009F                     _ADCON1bits	set	159
    88  009E                     _ADRESL	set	158
    89  0085                     _TRISA	set	133
    90  0085                     _TRISAbits	set	133
    91  0086                     _TRISB	set	134
    92  0087                     _TRISC	set	135
    93  0087                     _TRISCbits	set	135
    94  011E                     _ANSEL	set	286
    95  011F                     _ANSELH	set	287
    96  011E                     _ANSELbits	set	286
    97                           
    98                           	psect	text0
    99  0000                     __ptext0:	
   100                           ; #config settings
   101                           
   102                           
   103                           ;psect for function _m0for
   104  0000                     
   105                           	psect	cinit
   106  07FD                     start_initialization:	
   107  07FD                     __initialization:	
   108  07FD                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111  07FD                     __end_of__initialization:	
   112  07FD  0183               	clrf	3
   113  07FE  118A  2F9E         	ljmp	_main	;jump to C main() function
   114                           
   115                           	psect	cstackCOMMON
   116  0070                     __pcstackCOMMON:	
   117  0070                     ??_m0for:	
   118  0070                     ??_m0rev:	
   119                           ; 0 bytes @ 0x0
   120                           
   121  0070                     ?_m0for:	
   122                           ; 0 bytes @ 0x0
   123                           
   124  0070                     ?_m0rev:	
   125                           ; 2 bytes @ 0x0
   126                           
   127  0070                     ?_main:	
   128                           ; 2 bytes @ 0x0
   129                           
   130                           
   131                           ; 2 bytes @ 0x0
   132  0070                     	ds	2
   133  0072                     ??_main:	
   134  0072                     main@result:	
   135                           ; 0 bytes @ 0x2
   136                           
   137                           
   138                           ; 2 bytes @ 0x2
   139  0072                     	ds	2
   140                           
   141                           	psect	maintext
   142  079E                     __pmaintext:	
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 5 in file "main.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;  result          2    2[COMMON] int 
   153 ;; Return value:  Size  Location     Type
   154 ;;                  2   34[COMMON] int 
   155 ;; Registers used:
   156 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 17F/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   162 ;;      Params:         0       0       0       0
   163 ;;      Locals:         2       0       0       0
   164 ;;      Temps:          0       0       0       0
   165 ;;      Totals:         2       0       0       0
   166 ;;Total ram usage:        2 bytes
   167 ;; Hardware stack levels required when called:    1
   168 ;; This function calls:
   169 ;;		_m0for
   170 ;;		_m0rev
   171 ;; This function is called by:
   172 ;;		Startup code after reset
   173 ;; This function uses a non-reentrant model
   174 ;;
   175                           
   176                           
   177                           ;psect for function _main
   178  079E                     _main:	
   179                           
   180                           ;main.c: 7: int result;
   181                           ;main.c: 9: TRISA = 0xFF;
   182                           
   183                           ;incstack = 0
   184                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   185  079E  30FF               	movlw	255
   186  079F  1683               	bsf	3,5	;RP0=1, select bank1
   187  07A0  1303               	bcf	3,6	;RP1=0, select bank1
   188  07A1  0085               	movwf	5	;volatile
   189                           
   190                           ;main.c: 10: TRISB = 0xFF;
   191  07A2  30FF               	movlw	255
   192  07A3  0086               	movwf	6	;volatile
   193                           
   194                           ;main.c: 11: TRISC = 0xFF;
   195  07A4  30FF               	movlw	255
   196  07A5  0087               	movwf	7	;volatile
   197                           
   198                           ;main.c: 13: ANSEL = 0x00;
   199  07A6  1283               	bcf	3,5	;RP0=0, select bank2
   200  07A7  1703               	bsf	3,6	;RP1=1, select bank2
   201  07A8  019E               	clrf	30	;volatile
   202                           
   203                           ;main.c: 14: ANSELH = 0x00;
   204  07A9  019F               	clrf	31	;volatile
   205                           
   206                           ;main.c: 16: TRISAbits.TRISA2 = 1;
   207  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   208  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   209  07AC  1505               	bsf	5,2	;volatile
   210                           
   211                           ;main.c: 17: ANSELbits.ANS2 = 1;
   212  07AD  1283               	bcf	3,5	;RP0=0, select bank2
   213  07AE  1703               	bsf	3,6	;RP1=1, select bank2
   214  07AF  151E               	bsf	30,2	;volatile
   215                           
   216                           ;main.c: 19: TRISAbits.TRISA0 = 1;
   217  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   218  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   219  07B2  1405               	bsf	5,0	;volatile
   220                           
   221                           ;main.c: 20: ANSELbits.ANS0 = 1;
   222  07B3  1283               	bcf	3,5	;RP0=0, select bank2
   223  07B4  1703               	bsf	3,6	;RP1=1, select bank2
   224  07B5  141E               	bsf	30,0	;volatile
   225                           
   226                           ;main.c: 22: TRISCbits.TRISC0 = 0;
   227  07B6  1683               	bsf	3,5	;RP0=1, select bank1
   228  07B7  1303               	bcf	3,6	;RP1=0, select bank1
   229  07B8  1007               	bcf	7,0	;volatile
   230                           
   231                           ;main.c: 23: TRISCbits.TRISC1 = 0;
   232  07B9  1087               	bcf	7,1	;volatile
   233                           
   234                           ;main.c: 29: ADCON0bits.ADFM = 1;
   235  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   236  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   237  07BC  179F               	bsf	31,7	;volatile
   238                           
   239                           ;main.c: 30: ADCON0bits.VCFG = 0;
   240  07BD  131F               	bcf	31,6	;volatile
   241                           
   242                           ;main.c: 31: ADCON1bits.ADCS = 0b001;
   243  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   244  07BF  1303               	bcf	3,6	;RP1=0, select bank1
   245  07C0  081F               	movf	31,w	;volatile
   246  07C1  398F               	andlw	-113
   247  07C2  3810               	iorlw	16
   248  07C3  009F               	movwf	31	;volatile
   249                           
   250                           ;main.c: 36: ADCON0bits.ADON = 1;
   251  07C4  1283               	bcf	3,5	;RP0=0, select bank0
   252  07C5  1303               	bcf	3,6	;RP1=0, select bank0
   253  07C6  141F               	bsf	31,0	;volatile
   254  07C7                     l546:	
   255                           ;main.c: 42: while(1)
   256                           
   257                           
   258                           ;main.c: 43: {
   259                           ;main.c: 44: _delay((unsigned long)((5)*(4000000/4000000.0)));
   260  07C7  2FC8               	nop2	;2 cycle nop
   261  07C8  2FC9               	nop2	;2 cycle nop
   262  07C9  0000               	nop
   263                           
   264                           ;main.c: 45: ADCON0bits.CHS = 2;
   265  07CA  1283               	bcf	3,5	;RP0=0, select bank0
   266  07CB  1303               	bcf	3,6	;RP1=0, select bank0
   267  07CC  081F               	movf	31,w	;volatile
   268  07CD  39C3               	andlw	-61
   269  07CE  3808               	iorlw	8
   270  07CF  009F               	movwf	31	;volatile
   271                           
   272                           ;main.c: 46: ADCON0bits.GO = 1;
   273  07D0  149F               	bsf	31,1	;volatile
   274  07D1                     l36:	
   275                           ;main.c: 47: while(ADCON0bits.GO==1){};
   276                           
   277  07D1  189F               	btfsc	31,1	;volatile
   278  07D2  2FD1               	goto	l36
   279                           
   280                           ;main.c: 48: result = (ADRESH<<8)|ADRESL;
   281  07D3  081E               	movf	30,w	;volatile
   282  07D4  01F3               	clrf	main@result+1
   283  07D5  07F3               	addwf	main@result+1,f
   284  07D6  1683               	bsf	3,5	;RP0=1, select bank1
   285  07D7  1303               	bcf	3,6	;RP1=0, select bank1
   286  07D8  081E               	movf	30,w	;volatile
   287  07D9  01F2               	clrf	main@result
   288  07DA  07F2               	addwf	main@result,f
   289                           
   290                           ;main.c: 50: if(result > 170)
   291  07DB  0873               	movf	main@result+1,w
   292  07DC  3A80               	xorlw	128
   293  07DD  00FF               	movwf	127
   294  07DE  3080               	movlw	128
   295  07DF  027F               	subwf	127,w
   296  07E0  1D03               	skipz
   297  07E1  2FE4               	goto	u25
   298  07E2  30AB               	movlw	171
   299  07E3  0272               	subwf	main@result,w
   300  07E4                     u25:	
   301  07E4  1C03               	skipc
   302  07E5  2FEA               	goto	l558
   303                           
   304                           ;main.c: 51: {
   305                           ;main.c: 52: m0for();
   306  07E6  118A  276E  118A   	fcall	_m0for
   307                           
   308                           ;main.c: 53: }
   309  07E9  2FC7               	goto	l546
   310  07EA                     l558:	
   311                           
   312                           ;main.c: 54: else if (result < 110)
   313  07EA  0873               	movf	main@result+1,w
   314  07EB  3A80               	xorlw	128
   315  07EC  00FF               	movwf	127
   316  07ED  3080               	movlw	128
   317  07EE  027F               	subwf	127,w
   318  07EF  1D03               	skipz
   319  07F0  2FF3               	goto	u35
   320  07F1  306E               	movlw	110
   321  07F2  0272               	subwf	main@result,w
   322  07F3                     u35:	
   323  07F3  1803               	skipnc
   324  07F4  2FF9               	goto	l41
   325                           
   326                           ;main.c: 55: {
   327                           ;main.c: 56: m0rev();
   328  07F5  118A  2785  118A   	fcall	_m0rev
   329                           
   330                           ;main.c: 57: }
   331  07F8  2FC7               	goto	l546
   332  07F9                     l41:	
   333                           
   334                           ;main.c: 58: else
   335                           ;main.c: 59: {
   336                           ;main.c: 60: PORTCbits.RC0 = 0;
   337  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   338  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   339  07FB  1007               	bcf	7,0	;volatile
   340  07FC  2FC7               	goto	l546
   341  07FD                     __end_of_main:	
   342                           ;main.c: 61: }
   343                           ;main.c: 62: }
   344                           ;main.c: 63: return 0;
   345                           ;	Return value of _main is never used
   346                           
   347                           
   348                           	psect	text1
   349  0785                     __ptext1:	
   350 ;; *************** function _m0rev *****************
   351 ;; Defined at:
   352 ;;		line 74 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2   30[COMMON] int 
   359 ;; Registers used:
   360 ;;		wreg
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   366 ;;      Params:         0       0       0       0
   367 ;;      Locals:         0       0       0       0
   368 ;;      Temps:          2       0       0       0
   369 ;;      Totals:         2       0       0       0
   370 ;;Total ram usage:        2 bytes
   371 ;; Hardware stack levels used:    1
   372 ;; This function calls:
   373 ;;		Nothing
   374 ;; This function is called by:
   375 ;;		_main
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           
   379                           
   380                           ;psect for function _m0rev
   381  0785                     _m0rev:	
   382                           
   383                           ;main.c: 76: PORTCbits.RC0 = 1;
   384                           
   385                           ;incstack = 0
   386                           ; Regs used in _m0rev: [wreg]
   387  0785  1283               	bcf	3,5	;RP0=0, select bank0
   388  0786  1303               	bcf	3,6	;RP1=0, select bank0
   389  0787  1407               	bsf	7,0	;volatile
   390                           
   391                           ;main.c: 77: _delay((unsigned long)((10)*(4000000/4000.0)));
   392  0788  300D               	movlw	13
   393  0789  00F1               	movwf	??_m0rev+1
   394  078A  30FB               	movlw	251
   395  078B  00F0               	movwf	??_m0rev
   396  078C                     u47:	
   397  078C  0BF0               	decfsz	??_m0rev,f
   398  078D  2F8C               	goto	u47
   399  078E  0BF1               	decfsz	??_m0rev+1,f
   400  078F  2F8C               	goto	u47
   401  0790  2F91               	nop2
   402                           
   403                           ;main.c: 78: PORTCbits.RC0 = 0;
   404  0791  1283               	bcf	3,5	;RP0=0, select bank0
   405  0792  1303               	bcf	3,6	;RP1=0, select bank0
   406  0793  1007               	bcf	7,0	;volatile
   407                           
   408                           ;main.c: 79: _delay((unsigned long)((10)*(4000000/4000.0)));
   409  0794  300D               	movlw	13
   410  0795  00F1               	movwf	??_m0rev+1
   411  0796  30FB               	movlw	251
   412  0797  00F0               	movwf	??_m0rev
   413  0798                     u57:	
   414  0798  0BF0               	decfsz	??_m0rev,f
   415  0799  2F98               	goto	u57
   416  079A  0BF1               	decfsz	??_m0rev+1,f
   417  079B  2F98               	goto	u57
   418  079C  2F9D               	nop2
   419  079D  0008               	return
   420  079E                     __end_of_m0rev:	
   421                           
   422                           	psect	text2
   423  076E                     __ptext2:	
   424 ;; *************** function _m0for *****************
   425 ;; Defined at:
   426 ;;		line 66 in file "main.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  2   28[COMMON] int 
   433 ;; Registers used:
   434 ;;		wreg
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   440 ;;      Params:         0       0       0       0
   441 ;;      Locals:         0       0       0       0
   442 ;;      Temps:          2       0       0       0
   443 ;;      Totals:         2       0       0       0
   444 ;;Total ram usage:        2 bytes
   445 ;; Hardware stack levels used:    1
   446 ;; This function calls:
   447 ;;		Nothing
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           
   454                           ;psect for function _m0for
   455  076E                     _m0for:	
   456                           
   457                           ;main.c: 68: PORTCbits.RC0 = 1;
   458                           
   459                           ;incstack = 0
   460                           ; Regs used in _m0for: [wreg]
   461  076E  1283               	bcf	3,5	;RP0=0, select bank0
   462  076F  1303               	bcf	3,6	;RP1=0, select bank0
   463  0770  1407               	bsf	7,0	;volatile
   464                           
   465                           ;main.c: 69: _delay((unsigned long)((1)*(4000000/4000.0)));
   466  0771  30F9               	movlw	249
   467  0772  00F0               	movwf	??_m0for
   468  0773                     u67:	
   469  0773  0000               	nop
   470  0774  0BF0               	decfsz	??_m0for,f
   471  0775  2F73               	goto	u67
   472  0776  2F77               	nop2	;nop
   473  0777  0000               	nop
   474                           
   475                           ;main.c: 70: PORTCbits.RC0 = 0;
   476  0778  1283               	bcf	3,5	;RP0=0, select bank0
   477  0779  1303               	bcf	3,6	;RP1=0, select bank0
   478  077A  1007               	bcf	7,0	;volatile
   479                           
   480                           ;main.c: 71: _delay((unsigned long)((19)*(4000000/4000.0)));
   481  077B  3019               	movlw	25
   482  077C  00F1               	movwf	??_m0for+1
   483  077D  30AB               	movlw	171
   484  077E  00F0               	movwf	??_m0for
   485  077F                     u77:	
   486  077F  0BF0               	decfsz	??_m0for,f
   487  0780  2F7F               	goto	u77
   488  0781  0BF1               	decfsz	??_m0for+1,f
   489  0782  2F7F               	goto	u77
   490  0783  2F84               	nop2
   491  0784  0008               	return
   492  0785                     __end_of_m0for:	
   493  007E                     btemp	set	126	;btemp
   494  007E                     wtemp	set	126
   495  007E                     wtemp0	set	126
   496  0080                     wtemp1	set	128
   497  0082                     wtemp2	set	130
   498  0084                     wtemp3	set	132
   499  0086                     wtemp4	set	134
   500  0088                     wtemp5	set	136
   501  007F                     wtemp6	set	127
   502  007E                     ttemp	set	126
   503  007E                     ttemp0	set	126
   504  0081                     ttemp1	set	129
   505  0084                     ttemp2	set	132
   506  0087                     ttemp3	set	135
   507  007F                     ttemp4	set	127
   508  007E                     ltemp	set	126
   509  007E                     ltemp0	set	126
   510  0082                     ltemp1	set	130
   511  0086                     ltemp2	set	134
   512  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_m0for
    _main->_m0rev

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              2 COMMON     2     2      0
                              _m0for
                              _m0rev
 ---------------------------------------------------------------------------------
 (1) _m0rev                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _m0for                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _m0for
   _m0rev

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Dec 08 18:00:58 2014

            __CFG_CP$OFF 0000                       l41 07F9                       l36 07D1  
                     u25 07E4                       u35 07F3                       u47 078C  
                     u57 0798                       u67 0773                       u77 077F  
                    l546 07C7                      l558 07EA             __CFG_CPD$OFF 0000  
                   _main 079E                     btemp 007E                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
          __CFG_IESO$OFF 0000            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _ANSEL 011E                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087           __CFG_FCMEN$OFF 0000  
                  _m0for 076E                    _m0rev 0785           __CFG_BOREN$OFF 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FD  
           __end_of_main 07FD                   ??_main 0072                   ?_m0for 0070  
                 ?_m0rev 0070                   _ADRESH 001E                   _ADRESL 009E  
                 _ANSELH 011F           __CFG_PWRTE$OFF 0000  __end_of__initialization 07FD  
         __pcstackCOMMON 0070            __end_of_m0for 0785            __end_of_m0rev 079E  
                ??_m0for 0070                  ??_m0rev 0070               __pmaintext 079E  
              _ANSELbits 011E                  __ptext0 0000                  __ptext1 0785  
                __ptext2 076E     end_of_initialization 07FD                _PORTCbits 0007  
              _TRISAbits 0085                _TRISCbits 0087               main@result 0072  
    start_initialization 07FD                ___latbits 0001           __size_of_m0for 0017  
         __size_of_m0rev 0019               _ADCON0bits 001F               _ADCON1bits 009F  
          __size_of_main 005F        __CFG_FOSC$INTRCIO 0000  
